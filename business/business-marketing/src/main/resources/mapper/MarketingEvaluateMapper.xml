<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yjtech.wisdom.tourism.marketing.mapper.MarketingEvaluateMapper">

    <insert id="insertBatch" parameterType="list">
        insert into tb_marketing_evaluate
        (id,create_time,update_time,create_user,update_user,deleted,area_code,tp_id,place_id,place_name,evaluate_content,evaluate_time,evaluate_type,data_type,keywords,rate,resource_info,data_create_time,data_update_time,source_platform,source_platform_id,evaluate_user)
        values
        <foreach collection="params" item="item" index="index" separator=",">
            (#{item.id},#{item.createTime},#{item.updateTime},#{item.createUser},#{item.updateUser},#{item.deleted},#{item.areaCode},#{item.tpId},#{item.placeId},#{item.placeName},#{item.evaluateContent},#{item.evaluateTime},#{item.evaluateType},#{item.dataType},#{item.keywords},#{item.rate},#{item.resourceInfo},#{item.dataCreateTime},#{item.dataUpdateTime},#{item.sourcePlatform},#{item.sourcePlatformId},#{item.evaluateUser})
        </foreach>
        ON DUPLICATE KEY UPDATE tp_id = values(tp_id),
        place_id = values(place_id),
        place_name = values(place_name),
        evaluate_content = values(evaluate_content),
        evaluate_time = values(evaluate_time),
        evaluate_type = values(evaluate_type),
        data_type = values(data_type),
        keywords = values(keywords),
        rate = values(rate),
        resource_info = values(resource_info),
        data_create_time = values(data_create_time),
        data_update_time = values(data_update_time),
        source_platform = values(source_platform),
        source_platform_id = values(source_platform_id),
        evaluate_user = values(evaluateUser)
    </insert>


    <select id="queryEvaluateStatistics" resultType="com.yjtech.wisdom.tourism.marketing.pojo.dto.MarketingEvaluateStatisticsDTO"
            parameterType="com.yjtech.wisdom.tourism.marketing.pojo.vo.EvaluateQueryVO">
        select
        COUNT(evaluate.id) as evaluateTotal,
        ROUND(SUM(CASE WHEN evaluate.evaluate_type = 0 THEN 1 ELSE 0 END)/COUNT(evaluate.id),3)*100 as satisfaction,
        ROUND(SUM(evaluate.rate)/COUNT(evaluate.id),1) as rate
        from
        tb_marketing_evaluate evaluate
        <include refid="table_join"/>
        <where>
            <include refid="base_screen_query_condition"/>
        </where>
    </select>

    <!-- 查询评论类型分布 -->
    <select id="queryEvaluateTypeDistribution" resultType="com.yjtech.wisdom.tourism.common.bean.BasePercentVO"
            parameterType="com.yjtech.wisdom.tourism.marketing.pojo.vo.EvaluateQueryVO">
        select
        CASE
        WHEN evaluate.evaluate_type = 0 THEN '好评'
        WHEN evaluate.evaluate_type = 1 THEN '中评'
        WHEN evaluate.evaluate_type = 2 THEN '差评'
        ELSE '其他' END as name,
        COUNT(evaluate.id) as value,
        COALESCE (ROUND(COUNT(evaluate.id)/total.totalNum, 3)*100,0) as rate
        from
        tb_marketing_evaluate as evaluate
        <include refid="table_join"/>
        INNER JOIN
        (select
        count(evaluate.id) as totalNum
        from
        tb_marketing_evaluate evaluate
        <include refid="table_join"/>
        <where>
            <include refid="base_screen_query_condition"/>
        </where>
        ) as total ON 1 = 1
        <where>
            <include refid="base_screen_query_condition"/>
        </where>
        GROUP BY evaluate.evaluate_type
    </select>

    <!-- 查询评论对象分布 -->
    <select id="queryEvaluateObjectDistribution" resultType="com.yjtech.wisdom.tourism.common.bean.BasePercentVO"
            parameterType="com.yjtech.wisdom.tourism.marketing.pojo.vo.EvaluateQueryVO">
        select
        CASE
        WHEN evaluate.data_type = 1 THEN '景区'
        WHEN evaluate.data_type = 2 THEN '酒店'
        ELSE '其他' END as name,
        COUNT(evaluate.id) as value,
        COALESCE (ROUND(COUNT(evaluate.id)/total.totalNum, 3)*100,0) as rate
        from
        tb_marketing_evaluate as evaluate
        <include refid="table_join"/>
        INNER JOIN
        (select
        count(evaluate.id) as totalNum
        from
        tb_marketing_evaluate evaluate
        <include refid="table_join"/>
        <where>
            <include refid="base_screen_query_condition"/>
        </where>
        ) as total ON 1 = 1
        <where>
            <include refid="base_screen_query_condition"/>
        </where>
        GROUP BY evaluate.data_type
    </select>

    <!-- 查询评论热词排行 -->
    <select id="queryEvaluateHotRank" resultType="com.yjtech.wisdom.tourism.common.bean.BaseVO"
            parameterType="com.yjtech.wisdom.tourism.marketing.pojo.vo.EvaluateQueryVO">
        select
        evaluate.keywords as name,
        COUNT(evaluate.id) as value
        from
        tb_marketing_evaluate evaluate
        <include refid="table_join"/>
        <where>
            <include refid="base_screen_query_condition"/>
        </where>
        GROUP BY evaluate.keywords
        ORDER BY value DESC
    </select>

    <!-- 查询评价排行 -->
    <select id="queryEvaluateRank" resultType="com.yjtech.wisdom.tourism.common.bean.BaseVO"
            parameterType="com.yjtech.wisdom.tourism.marketing.pojo.vo.EvaluateQueryVO">
        select
        hotel.name as name,
        COUNT(evaluate.id) as value
        from
        tb_marketing_evaluate evaluate
        <include refid="table_join"/>
        <where>
            <include refid="base_screen_query_condition"/>
        </where>
        GROUP BY evaluate.place_id
        ORDER BY value DESC
    </select>

    <!-- 查询满意度排行 -->
    <select id="queryEvaluateSatisfactionRank" resultType="com.yjtech.wisdom.tourism.marketing.pojo.dto.HotelEvaluateSatisfactionRankDTO"
            parameterType="com.yjtech.wisdom.tourism.marketing.pojo.vo.EvaluateQueryVO">
        select
        hotel.id as id,
        hotel.name as name,
        ROUND(SUM(CASE WHEN evaluate.evaluate_type = 0 THEN 1 ELSE 0 END)/COUNT(evaluate.id),3)*100 as value
        from
        tb_marketing_evaluate evaluate
        <include refid="table_join"/>
        <where>
            <include refid="base_screen_query_condition"/>
        </where>
        GROUP BY evaluate.place_id
        ORDER BY value DESC
    </select>

    <select id="queryForPage" resultType="com.yjtech.wisdom.tourism.marketing.pojo.dto.MarketingEvaluateListDTO"
            parameterType="com.yjtech.wisdom.tourism.marketing.pojo.vo.EvaluateQueryVO">
        select
        id as id,
        place_id as placeId,
        place_name as placeName,
        data_type as dataType,
        CASE
        WHEN data_type = 1 THEN '景区'
        WHEN data_type = 2 THEN '酒店'
        ELSE '其他' END as dataTypeDesc,
        evaluate_content as evaluateContent,
        evaluate_time as evaluateTime,
        evaluate_type as evaluateType,
        CASE
        WHEN evaluate_type = 0 THEN '好评'
        WHEN evaluate_type = 1 THEN '中评'
        WHEN evaluate_type = 2 THEN '差评'
        ELSE '其他' END as evaluateTypeDesc,
        rate as rate,
        source_platform as sourcePlatform,
        source_platform_id as sourcePlatformId,
        evaluate_user as evaluateUser,
        create_time as createTime,
        equip_status as equipStatus,
        CASE
        WHEN equip_status = 0 THEN '禁用'
        WHEN equip_status = 1 THEN '启用'
        ELSE '其他' END as equipStatusDesc
        from
        tb_marketing_evaluate
        <where>
            <if test="params != null">
                <if test="params.placeName != null and params.placeName != ''">
                    place_ame LIKE CONCAT('%', #{params.placeName}, '%') and
                </if>
                <if test="params.placeId != null and params.placeId != ''">
                    place_id = #{params.placeId} and
                </if>
                <if test="params.evaluateType != null">
                    evaluate_type = #{params.evaluateType} and
                </if>
                <if test="params.dataType != null">
                    data_type = #{params.dataType} and
                </if>
                <if test="params.equipStatus != null">
                    equip_status = #{params.equipStatus} and
                </if>
                <if test="params.areaCode != null and params.areaCode != ''">
                    area_code LIKE CONCAT('${params.areaCode}','%') and
                </if>
                <if test="params.beginTime != null">
                    <![CDATA[ evaluate_time >= #{params.beginTime} ]]> and
                </if>
                <if test="params.endTime != null">
                    <![CDATA[ evaluate_time <= #{params.endTime} ]]> and
                </if>
            </if>
            deleted = 0
        </where>
        ORDER BY evaluate_time DESC
    </select>

    <!-- 查询评价量今年搜索月趋势 -->
    <select id="queryEvaluateCurrentAnalysis" resultType="com.yjtech.wisdom.tourism.common.bean.AnalysisMonthChartInfo"
            parameterType="com.yjtech.wisdom.tourism.marketing.pojo.vo.EvaluateQueryVO">
        SELECT
        DATE_FORMAT(evaluate.evaluate_time,#{params.sqlDateFormat}) as time,
        COUNT(evaluate.id) as count,
        ROUND(((COUNT(evaluate.id) -
        (select
        COUNT(evaluateOne.id)
        from
        tb_marketing_evaluate evaluateOne
        <choose>
            <when test="params.status != null">
                INNER JOIN tb_hotel_info hotel ON hotel.id = evaluateOne.place_id and hotel.status = #{params.status}
            </when>
            <otherwise></otherwise>
        </choose>
        <where>
            evaluateOne.evaluate_time like concat(left((SELECT DATE_SUB(evaluate.evaluate_time,INTERVAL 1 YEAR)),7),'%') and
            evaluateOne.equip_status = 1 and
            evaluateOne.deleted = 0
        </where>
        ))/(select COUNT(evaluateTwo.id)
        from
        tb_marketing_evaluate evaluateTwo
        <choose>
            <when test="params.status != null">
                INNER JOIN tb_hotel_info hotel ON hotel.id = evaluateTwo.place_id and hotel.status = #{params.status}
            </when>
            <otherwise></otherwise>
        </choose>
        <where>
            evaluateTwo.evaluate_time like concat(left((SELECT DATE_SUB(evaluate.evaluate_time,INTERVAL 1 YEAR)),7),'%') and
            evaluateTwo.equip_status = 1 and
            evaluateTwo.deleted = 0
        </where>
        )),3)*100 as same,
        ROUND(((COUNT(evaluate.id) -
        (select COUNT(evaluateThree.id)
        from
        tb_marketing_evaluate evaluateThree
        <choose>
            <when test="params.status != null">
                INNER JOIN tb_hotel_info hotel ON hotel.id = evaluateThree.place_id and hotel.status = #{params.status}
            </when>
            <otherwise></otherwise>
        </choose>
        <where>
            evaluateThree.evaluate_time like concat(left((SELECT DATE_SUB(evaluate.evaluate_time,INTERVAL 1 MONTH)),7),'%') and
            evaluateThree.equip_status = 1 and
            evaluateThree.deleted = 0
        </where>
        ))/(select COUNT(evaluateFour.id)
        from
        tb_marketing_evaluate evaluateFour
        <choose>
            <when test="params.status != null">
                INNER JOIN tb_hotel_info hotel ON hotel.id = evaluateFour.place_id and hotel.status = #{params.status}
            </when>
            <otherwise></otherwise>
        </choose>
        <where>
            evaluateFour.evaluate_time like concat(left((SELECT DATE_SUB(evaluate.evaluate_time,INTERVAL 1 MONTH)),7),'%') and
            evaluateFour.equip_status = 1 and
            evaluateFour.deleted = 0
        </where>
        )),3)*100 as sequential
        from tb_marketing_evaluate evaluate
        <choose>
            <when test="params.status != null">
                INNER JOIN tb_hotel_info hotel ON hotel.id = evaluate.place_id and hotel.status = #{params.status}
            </when>
            <otherwise></otherwise>
        </choose>
        <where>
            <![CDATA[ evaluate.evaluate_time >= CONCAT(YEAR(now()),'-01-01 00:00:00') and ]]>
            <![CDATA[ evaluate.evaluate_time <= CONCAT(YEAR(now()),'-12-31 23:59:59') and ]]>
            evaluate.equip_status = 1 and
            evaluate.deleted = 0
        </where>
        GROUP BY DATE_FORMAT(evaluate.evaluate_time,#{params.sqlDateFormat})
    </select>

    <!-- 查询评价量去年搜索月趋势 -->
    <select id="queryEvaluateLastAnalysis" resultType="com.yjtech.wisdom.tourism.common.bean.AnalysisMonthChartInfo"
            parameterType="com.yjtech.wisdom.tourism.marketing.pojo.vo.EvaluateQueryVO">
        SELECT
        DATE_FORMAT(evaluate.evaluate_time,#{params.sqlDateFormat}) as time,
        COUNT(evaluate.id) as count
        from tb_marketing_evaluate evaluate
        <choose>
            <when test="params.status != null">
                INNER JOIN tb_hotel_info hotel ON hotel.id = evaluate.place_id and hotel.status = #{params.status}
            </when>
            <otherwise></otherwise>
        </choose>
        <where>
            evaluate.evaluate_time like concat(YEAR(now())-1,'%') and
            evaluate.equip_status = 1 and
            evaluate.deleted = 0
        </where>
        GROUP BY DATE_FORMAT(evaluate.evaluate_time,#{params.sqlDateFormat})
    </select>

    <!-- 查询评价满意度今年搜索月趋势 -->
    <select id="queryEvaluateSatisfactionCurrentAnalysis" resultType="com.yjtech.wisdom.tourism.common.bean.AnalysisMonthChartInfo"
            parameterType="com.yjtech.wisdom.tourism.marketing.pojo.vo.EvaluateQueryVO">
        SELECT
        DATE_FORMAT(evaluate.evaluate_time,#{params.sqlDateFormat}) as time,
        ROUND(SUM(CASE WHEN evaluate.evaluate_type = 0 THEN 1 ELSE 0 END)/COUNT(evaluate.id),3)*100 as count,
        ROUND((((ROUND(SUM(CASE WHEN evaluate.evaluate_type = 0 THEN 1 ELSE 0 END)/COUNT(evaluate.id),3)*100) -
        (select
        ROUND(SUM(CASE WHEN evaluateOne.evaluate_type = 0 THEN 1 ELSE 0 END)/COUNT(evaluateOne.id),3)*100
        from
        tb_marketing_evaluate evaluateOne
        <choose>
            <when test="params.status != null">
                INNER JOIN tb_hotel_info hotel ON hotel.id = evaluateOne.place_id and hotel.status = #{params.status}
            </when>
            <otherwise></otherwise>
        </choose>
        <where>
            evaluateOne.evaluate_time like concat(left((SELECT DATE_SUB(evaluate.evaluate_time,INTERVAL 1 YEAR)),7),'%') and
            evaluateOne.equip_status = 1 and
            evaluateOne.deleted = 0
        </where>
        ))/(select ROUND(SUM(CASE WHEN evaluateTwo.evaluate_type = 0 THEN 1 ELSE 0 END)/COUNT(evaluateTwo.id),3)*100
        from
        tb_marketing_evaluate evaluateTwo
        <choose>
            <when test="params.status != null">
                INNER JOIN tb_hotel_info hotel ON hotel.id = evaluateTwo.place_id and hotel.status = #{params.status}
            </when>
            <otherwise></otherwise>
        </choose>
        <where>
            evaluateTwo.evaluate_time like concat(left((SELECT DATE_SUB(evaluate.evaluate_time,INTERVAL 1 YEAR)),7),'%') and
            evaluateTwo.equip_status = 1 and
            evaluateTwo.deleted = 0
        </where>
        )),3)*100 as same,
        ROUND((((ROUND(SUM(CASE WHEN evaluate.evaluate_type = 0 THEN 1 ELSE 0 END)/COUNT(evaluate.id),3)*100) -
        (select ROUND(SUM(CASE WHEN evaluateThree.evaluate_type = 0 THEN 1 ELSE 0 END)/COUNT(evaluateThree.id),3)*100
        from
        tb_marketing_evaluate evaluateThree
        <choose>
            <when test="params.status != null">
                INNER JOIN tb_hotel_info hotel ON hotel.id = evaluateThree.place_id and hotel.status = #{params.status}
            </when>
            <otherwise></otherwise>
        </choose>
        <where>
            evaluateThree.evaluate_time like concat(left((SELECT DATE_SUB(evaluate.evaluate_time,INTERVAL 1 MONTH)),7),'%') and
            evaluateThree.equip_status = 1 and
            evaluateThree.deleted = 0
        </where>
        ))/(select ROUND(SUM(CASE WHEN evaluateFour.evaluate_type = 0 THEN 1 ELSE 0 END)/COUNT(evaluateFour.id),3)*100
        from
        tb_marketing_evaluate evaluateFour
        <choose>
            <when test="params.status != null">
                INNER JOIN tb_hotel_info hotel ON hotel.id = evaluateFour.place_id and hotel.status = #{params.status}
            </when>
            <otherwise></otherwise>
        </choose>
        <where>
            evaluateFour.evaluate_time like concat(left((SELECT DATE_SUB(evaluate.evaluate_time,INTERVAL 1 MONTH)),7),'%') and
            evaluateFour.equip_status = 1 and
            evaluateFour.deleted = 0
        </where>
        )),3)*100 as sequential
        from tb_marketing_evaluate evaluate
        <choose>
            <when test="params.status != null">
                INNER JOIN tb_hotel_info hotel ON hotel.id = evaluate.place_id and hotel.status = #{params.status}
            </when>
            <otherwise></otherwise>
        </choose>
        <where>
            <![CDATA[ evaluate.evaluate_time >= CONCAT(YEAR(now()),'-01-01 00:00:00') and ]]>
            <![CDATA[ evaluate.evaluate_time <= CONCAT(YEAR(now()),'-12-31 23:59:59') and ]]>
            evaluate.equip_status = 1 and
            evaluate.deleted = 0
        </where>
        GROUP BY DATE_FORMAT(evaluate.evaluate_time,#{params.sqlDateFormat})
    </select>

    <!-- 查询评价满意度去年搜索月趋势 -->
    <select id="queryEvaluateSatisfactionLastAnalysis" resultType="com.yjtech.wisdom.tourism.common.bean.AnalysisMonthChartInfo"
            parameterType="com.yjtech.wisdom.tourism.marketing.pojo.vo.EvaluateQueryVO">
        SELECT
        DATE_FORMAT(evaluate.evaluate_time,#{params.sqlDateFormat}) as time,
        ROUND(SUM(CASE WHEN evaluate.evaluate_type = 0 THEN 1 ELSE 0 END)/COUNT(evaluate.id),3)*100 as count
        from tb_marketing_evaluate evaluate
        <choose>
            <when test="params.status != null">
                INNER JOIN tb_hotel_info hotel ON hotel.id = evaluate.place_id and hotel.status = #{params.status}
            </when>
            <otherwise></otherwise>
        </choose>
        <where>
            evaluate.evaluate_time like concat(YEAR(now())-1,'%') and
            evaluate.equip_status = 1 and
            evaluate.deleted = 0
        </where>
        GROUP BY DATE_FORMAT(evaluate.evaluate_time,#{params.sqlDateFormat})
    </select>

    <!--景区大数据-评价排行top5-->
    <select id="queryEvaluateTop5" resultType="com.yjtech.wisdom.tourism.common.bean.BaseVO">
        select
        evaluate_new.place_name name,
        count(evaluate_new.id) `value`
        from
        (SELECT
        evaluate.place_name,evaluate.id
        FROM
            tb_marketing_evaluate evaluate
        <include refid="scenic_table_join"/>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <include refid="base_screen_query_condition"/>
        </trim>
        GROUP BY evaluate.id) evaluate_new
        GROUP BY place_name
        ORDER BY `value` DESC
    </select>

    <!--景区大数据-查询满意度排行top5 -->
    <select id="querySatisfactionTop5" resultType="com.yjtech.wisdom.tourism.common.bean.BaseVO">
        select
        evaluate.place_name as name,
        ROUND(SUM(CASE WHEN evaluate.evaluate_type = 0 THEN 1 ELSE 0 END)/COUNT(evaluate.id),3)*100 as `value`
        from
        tb_marketing_evaluate evaluate
        <include refid="scenic_table_join"/>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <include refid="base_screen_query_condition"/>
        </trim>
        GROUP BY evaluate.place_id
        ORDER BY value DESC
    </select>

    <!--景区大数据-评价类型分布 -->
    <select id="queryScenicEvaluateTypeDistribution" resultType="com.yjtech.wisdom.tourism.common.bean.BasePercentVO">
        SELECT
        CASE
        WHEN evaluate_new_s.evaluate_type = 0 THEN '好评'
        WHEN evaluate_new_s.evaluate_type = 1 THEN '中评'
        WHEN evaluate_new_s.evaluate_type = 2 THEN '差评'
        ELSE '其他'
        END AS NAME,
        COUNT( evaluate_new_s.id ) AS
        `value`,
        COALESCE ( ROUND( COUNT( evaluate_new_s.id )/ evaluate_new_s.totalNum, 3 )* 100, 0 ) AS rate
        FROM
        (SELECT
        evaluate.id,
        evaluate.evaluate_type,
        total.totalNum
        FROM
        tb_marketing_evaluate AS evaluate
        INNER JOIN tb_scenic s ON evaluate.place_id = s.id
        AND s.STATUS = 1
        INNER JOIN (
        SELECT
        count( evaluate_new.id ) AS totalNum
        FROM
        (SELECT
        evaluate.id
        FROM
        tb_marketing_evaluate evaluate
        <include refid="scenic_table_join"/>
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <include refid="base_screen_query_condition"/>
        </trim>
        GROUP BY
        evaluate.id
        ) evaluate_new
        ) AS total ON 1 = 1
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <include refid="base_screen_query_condition"/>
        </trim>
        GROUP BY
        evaluate.id
        ) evaluate_new_s
        GROUP BY
        evaluate_new_s.evaluate_type
    </select>

    <!--景区分布-游客关注及美誉度-->
    <select id="queryScenicEvaluateStatistics" resultType="com.yjtech.wisdom.tourism.marketing.pojo.dto.MarketingEvaluateStatisticsDTO">
        select
        COUNT(evaluate_new.id) as evaluateTotal,
        IFNULL(ROUND(SUM(CASE WHEN evaluate_new.evaluate_type = 0 THEN 1 ELSE 0 END)/COUNT(evaluate_new.id),3)*100,0) as satisfaction,
        IFNULL(ROUND(SUM(evaluate_new.rate)/COUNT(evaluate_new.id),1),0) as rate
        from
        (select
        evaluate.id, evaluate.evaluate_type,evaluate.rate
        from
        tb_marketing_evaluate evaluate
        <include refid="scenic_table_join"/>
        <where>
            <include refid="base_screen_query_condition"/>
        </where>
        GROUP BY evaluate.id) evaluate_new
    </select>

    <!--景区分布-热度趋势-->
    <select id="queryHeatTrend" resultType="com.yjtech.wisdom.tourism.common.bean.BaseVO">
        SELECT
        DATE_FORMAT( evaluate_new.evaluate_time, '%Y-%m-01' ) name,
        count( evaluate_new.id ) `value`
        FROM
        (SELECT
        evaluate.evaluate_time,
        evaluate.id
        FROM
        tb_marketing_evaluate evaluate
        <include refid="scenic_table_join"/>
        <where>
            <include refid="base_screen_query_condition"/>
        </where>
        GROUP BY evaluate.id
        ) evaluate_new
        GROUP BY DATE_FORMAT( evaluate_new.evaluate_time, '%Y-%m-%d' )
        ORDER BY evaluate_new.evaluate_time
    </select>

    <!--景区分布-满意度趋势-->
    <select id="querySatisfactionTrend" resultType="com.yjtech.wisdom.tourism.common.bean.BaseVO">
        SELECT
        DATE_FORMAT(evaluate_new.evaluate_time,'%Y-%m-01') name,
        SUM(CASE WHEN evaluate_new.evaluate_type = 0 THEN 1 ELSE 0 END) `value`
        from
        (select
        evaluate.evaluate_time,evaluate.evaluate_type
        from
        tb_marketing_evaluate evaluate
        <include refid="scenic_table_join"/>
        <where>
            <include refid="base_screen_query_condition"/>
        </where>
        GROUP BY evaluate.id
        ) evaluate_new
        group by DATE_FORMAT(evaluate_new.evaluate_time,'%Y-%m-%d')
        order by evaluate_new.evaluate_time
    </select>

    <!-- 景区分布-热词 -->
    <select id="queryScenicHotRank" resultType="com.yjtech.wisdom.tourism.common.bean.BaseVO"
            parameterType="com.yjtech.wisdom.tourism.marketing.pojo.vo.EvaluateQueryVO">
        SELECT
        evaluate_new.keywords as name,
        COUNT(evaluate_new.id) as `value`
        from
        (select
        evaluate.keywords,evaluate.id
        from
        tb_marketing_evaluate evaluate
        <include refid="scenic_table_join"/>
        <where>
            <include refid="base_screen_query_condition"/>
        </where>
        GROUP BY evaluate.id) evaluate_new
        GROUP BY evaluate_new.keywords
    </select>

    <sql id="scenic_table_join">
        INNER JOIN  tb_scenic s on evaluate.place_id = s.id and s.status=1
    </sql>

    <sql id="table_join">
        <choose>
            <when test="params.status != null">
                INNER JOIN tb_hotel_info hotel ON hotel.id = evaluate.place_id and hotel.status = #{params.status}
            </when>
            <otherwise></otherwise>
        </choose>
    </sql>

    <sql id="base_screen_query_condition">
        <if test="params != null">
            <if test="params.placeId != null and params.placeId != ''">
                evaluate.place_id = #{params.placeId} and
            </if>
            <if test="params.equipStatus != null">
                evaluate.equip_status = #{params.equipStatus} and
            </if>
            <if test="params.areaCode != null and params.areaCode != ''">
                evaluate.area_code LIKE CONCAT('${params.areaCode}','%') and
            </if>
            <if test="params.beginTime != null">
                <![CDATA[ evaluate.evaluate_time >= #{params.beginTime} ]]> and
            </if>
            <if test="params.endTime != null">
                <![CDATA[ evaluate.evaluate_time <= #{params.endTime} ]]> and
            </if>
        </if>
        evaluate.deleted = 0
    </sql>

    <sql id="query_screen_where">
        <if test="params!=null">
            <if test=" params.areaCode != null and params.areaCode != '' ">
                area_code like CONCAT('${params.areaCode}','%' )
            </if>
            <if test=" params.beginTime != null and params.beginTime != '' ">
                and <![CDATA[ evaluate_time >= #{params.beginTime} ]]>
            </if>
            <if test=" params.endTime != null and params.endTime != '' ">
                and <![CDATA[ evaluate_time <= #{params.endTime} ]]>
            </if>
        </if>
    </sql>

    <sql id="query_where">
        <if test="params!=null">
            <if test=" params.objectName != null">
                object_name like CONCAT('%','${params.objectName}','%' ) and
            </if>
            <if test=" params.issueType != null">
                issue_type = #{params.issueType} and
            </if>
            <if test=" params.objectType != null">
                object_type = #{params.objectType} and
            </if>
            <if test=" params.areaCode != null">
                area_code like CONCAT('${params.areaCode}','%' ) and
            </if>
            deleted = 0
        </if>
    </sql>
</mapper>
